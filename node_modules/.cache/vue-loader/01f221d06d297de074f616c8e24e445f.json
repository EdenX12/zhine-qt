{"remainingRequest":"D:\\Work\\jianpanHt\\jpqt\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Work\\jianpanHt\\jpqt\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Work\\jianpanHt\\jpqt\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Work\\jianpanHt\\jpqt\\src\\pages\\commodity\\ComPorductVerify.vue?vue&type=template&id=eb05b99a&scoped=true&","dependencies":[{"path":"D:\\Work\\jianpanHt\\jpqt\\src\\pages\\commodity\\ComPorductVerify.vue","mtime":1591767936580},{"path":"D:\\Work\\jianpanHt\\jpqt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Work\\jianpanHt\\jpqt\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Work\\jianpanHt\\jpqt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Work\\jianpanHt\\jpqt\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\n      \"div\",\n      { staticClass: \"container\" },\n      [\n        _c(\n          \"div\",\n          { staticClass: \"handle-box\" },\n          [\n            _c(\"el-input\", {\n              staticClass: \"name-input\",\n              attrs: { placeholder: \"商品名称\" },\n              model: {\n                value: _vm.query.productName,\n                callback: function($$v) {\n                  _vm.$set(_vm.query, \"productName\", $$v)\n                },\n                expression: \"query.productName\"\n              }\n            }),\n            _c(\n              \"el-select\",\n              {\n                staticClass: \"type-select\",\n                attrs: {\n                  placeholder: \"请选择商户\",\n                  disabled: _vm.shopDisabled\n                },\n                model: {\n                  value: _vm.query.shopId,\n                  callback: function($$v) {\n                    _vm.$set(_vm.query, \"shopId\", $$v)\n                  },\n                  expression: \"query.shopId\"\n                }\n              },\n              _vm._l(_vm.shopList, function(item) {\n                return _c(\"el-option\", {\n                  key: item.id,\n                  attrs: { label: item.shopName, value: item.id }\n                })\n              }),\n              1\n            ),\n            _c(\"el-cascader\", {\n              staticClass: \"type-select\",\n              attrs: { props: _vm.selectProps, placeholder: \"请选择商品类别\" },\n              model: {\n                value: _vm.query.typeId,\n                callback: function($$v) {\n                  _vm.$set(_vm.query, \"typeId\", $$v)\n                },\n                expression: \"query.typeId\"\n              }\n            }),\n            _c(\n              \"el-select\",\n              {\n                staticClass: \"type-select\",\n                attrs: { placeholder: \"请选择商品状态\" },\n                model: {\n                  value: _vm.query.productStatus,\n                  callback: function($$v) {\n                    _vm.$set(_vm.query, \"productStatus\", $$v)\n                  },\n                  expression: \"query.productStatus\"\n                }\n              },\n              _vm._l(_vm.productStatusList, function(item) {\n                return _c(\"el-option\", {\n                  key: item.id,\n                  attrs: { label: item.name, value: item.id }\n                })\n              }),\n              1\n            ),\n            _c(\n              \"el-select\",\n              {\n                staticClass: \"type-select\",\n                attrs: { placeholder: \"请选择产品类型\" },\n                model: {\n                  value: _vm.query.productType,\n                  callback: function($$v) {\n                    _vm.$set(_vm.query, \"productType\", $$v)\n                  },\n                  expression: \"query.productType\"\n                }\n              },\n              _vm._l(_vm.productTypeList, function(item) {\n                return _c(\"el-option\", {\n                  key: item.id,\n                  attrs: { label: item.name, value: item.id }\n                })\n              }),\n              1\n            ),\n            _c(\n              \"el-button\",\n              {\n                staticClass: \"query-button\",\n                attrs: { type: \"primary\", round: \"\", icon: \"el-icon-search\" },\n                on: {\n                  click: function($event) {\n                    return _vm.handleSearch()\n                  }\n                }\n              },\n              [_vm._v(\"搜索\")]\n            ),\n            _c(\n              \"el-button\",\n              {\n                staticClass: \"query-button\",\n                attrs: { type: \"danger\", round: \"\", icon: \"el-icon-refresh\" },\n                on: {\n                  click: function($event) {\n                    return _vm.resetQuery()\n                  }\n                }\n              },\n              [_vm._v(\"重置\")]\n            ),\n            _c(\n              \"el-button\",\n              {\n                staticClass: \"query-button\",\n                staticStyle: { \"margin-right\": \"10px\" },\n                attrs: {\n                  type: \"primary\",\n                  round: \"\",\n                  icon: \"el-icon-circle-plus-outline\"\n                },\n                on: {\n                  click: function($event) {\n                    return _vm.handleAdd()\n                  }\n                }\n              },\n              [_vm._v(\"添加\")]\n            ),\n            _c(\n              \"el-select\",\n              {\n                staticClass: \"type-select\",\n                attrs: {\n                  placeholder: \"请选择推荐分类\",\n                  disabled: _vm.recommendTypeDisabled\n                },\n                model: {\n                  value: _vm.selectRecommendType,\n                  callback: function($$v) {\n                    _vm.selectRecommendType = $$v\n                  },\n                  expression: \"selectRecommendType\"\n                }\n              },\n              _vm._l(_vm.recommendTypeData, function(item) {\n                return _c(\"el-option\", {\n                  key: item.id,\n                  attrs: { label: item.recommendTitle, value: item.id }\n                })\n              }),\n              1\n            ),\n            _c(\n              \"el-button\",\n              {\n                staticClass: \"query-button\",\n                staticStyle: { \"margin-right\": \"10px\" },\n                attrs: {\n                  type: \"primary\",\n                  round: \"\",\n                  icon: \"el-icon-circle-plus-outline\"\n                },\n                on: {\n                  click: function($event) {\n                    return _vm.handleAddToRecommend()\n                  }\n                }\n              },\n              [_vm._v(\"添加到推荐\")]\n            ),\n            _c(\n              \"el-select\",\n              {\n                staticClass: \"type-select\",\n                attrs: {\n                  placeholder: \"请选择活动\",\n                  disabled: _vm.activityDisabled\n                },\n                model: {\n                  value: _vm.selectActivity,\n                  callback: function($$v) {\n                    _vm.selectActivity = $$v\n                  },\n                  expression: \"selectActivity\"\n                }\n              },\n              _vm._l(_vm.activityData, function(item) {\n                return _c(\"el-option\", {\n                  key: item.id,\n                  attrs: { label: item.actName, value: item.id }\n                })\n              }),\n              1\n            ),\n            _c(\n              \"el-button\",\n              {\n                staticClass: \"query-button\",\n                attrs: {\n                  type: \"primary\",\n                  round: \"\",\n                  icon: \"el-icon-circle-plus-outline\"\n                },\n                on: {\n                  click: function($event) {\n                    return _vm.handleAddToActivity()\n                  }\n                }\n              },\n              [_vm._v(\"添加到活动\")]\n            )\n          ],\n          1\n        ),\n        _c(\n          \"el-table\",\n          {\n            directives: [\n              {\n                name: \"loading\",\n                rawName: \"v-loading\",\n                value: _vm.tableDataLoading,\n                expression: \"tableDataLoading\"\n              }\n            ],\n            ref: \"multipleTable\",\n            staticClass: \"table\",\n            attrs: {\n              data: _vm.tableData,\n              \"header-cell-style\": _vm.tableHeaderColor,\n              \"header-cell-class-name\": \"table-header\"\n            },\n            on: { \"selection-change\": _vm.handleSelectionChange }\n          },\n          [\n            _c(\"el-table-column\", {\n              attrs: { type: \"selection\", width: \"50\" }\n            }),\n            _c(\"el-table-column\", {\n              attrs: {\n                label: \"序号\",\n                type: \"index\",\n                width: \"50\",\n                align: \"center\"\n              }\n            }),\n            _c(\"el-table-column\", {\n              attrs: { label: \"商品图片\", width: \"80px\", align: \"center\" },\n              scopedSlots: _vm._u([\n                {\n                  key: \"default\",\n                  fn: function(scope) {\n                    return [\n                      _c(\"el-image\", {\n                        staticClass: \"table-product-img\",\n                        attrs: {\n                          src: scope.row.productImg,\n                          \"preview-src-list\": [scope.row.productImg]\n                        }\n                      })\n                    ]\n                  }\n                }\n              ])\n            }),\n            _c(\"el-table-column\", {\n              attrs: {\n                prop: \"shopName\",\n                label: \"商户名称\",\n                align: \"center\",\n                \"show-overflow-tooltip\": true\n              }\n            }),\n            _c(\"el-table-column\", {\n              attrs: {\n                prop: \"productName\",\n                label: \"商品名称\",\n                align: \"center\",\n                \"show-overflow-tooltip\": true\n              }\n            }),\n            _c(\"el-table-column\", {\n              attrs: {\n                prop: \"totalNumber\",\n                label: \"数量(任务线总数)\",\n                align: \"center\",\n                width: \"130px\"\n              }\n            }),\n            _c(\"el-table-column\", {\n              attrs: {\n                prop: \"taskNumber\",\n                label: \"任务份数\",\n                align: \"center\",\n                width: \"80px\"\n              }\n            }),\n            _c(\"el-table-column\", {\n              attrs: {\n                prop: \"productStatus\",\n                label: \"状态\",\n                formatter: _vm.statusFormat,\n                align: \"center\",\n                width: \"70px\"\n              }\n            }),\n            _c(\"el-table-column\", {\n              attrs: {\n                prop: \"productType\",\n                label: \"产品类型\",\n                formatter: _vm.typeFormat,\n                align: \"center\",\n                width: \"80px\"\n              }\n            }),\n            _c(\"el-table-column\", {\n              attrs: {\n                prop: \"createTime\",\n                label: \"创建时间\",\n                formatter: _vm.dateFormat,\n                align: \"center\"\n              }\n            }),\n            _c(\"el-table-column\", {\n              attrs: { label: \"操作\", align: \"center\" },\n              scopedSlots: _vm._u([\n                {\n                  key: \"default\",\n                  fn: function(scope) {\n                    return [\n                      _c(\"el-button\", {\n                        attrs: {\n                          type: \"primary\",\n                          icon: \"el-icon-more-outline\",\n                          circle: \"\"\n                        },\n                        on: {\n                          click: function($event) {\n                            return _vm.handleMore(scope.$index, scope.row)\n                          }\n                        }\n                      }),\n                      _c(\"el-button\", {\n                        attrs: {\n                          type: \"primary\",\n                          icon: \"el-icon-edit\",\n                          circle: \"\"\n                        },\n                        on: {\n                          click: function($event) {\n                            return _vm.handleEdit(scope.$index, scope.row)\n                          }\n                        }\n                      })\n                    ]\n                  }\n                }\n              ])\n            })\n          ],\n          1\n        ),\n        _c(\n          \"div\",\n          { staticClass: \"pagination\" },\n          [\n            _c(\"el-pagination\", {\n              attrs: {\n                background: \"\",\n                layout: \"total, prev, pager, next\",\n                \"current-page\": _vm.query.pageNum,\n                \"page-size\": _vm.query.pageSize,\n                total: _vm.pageTotal\n              },\n              on: { \"current-change\": _vm.handlePageChange }\n            })\n          ],\n          1\n        ),\n        _c(\n          \"el-dialog\",\n          {\n            attrs: {\n              title: _vm.dialogMessage,\n              visible: _vm.editVisible,\n              center: _vm.dialogCentr,\n              \"before-close\": _vm.handleClose,\n              top: \"0\",\n              width: \"60%\"\n            },\n            on: {\n              \"update:visible\": function($event) {\n                _vm.editVisible = $event\n              },\n              close: _vm.closeDialog\n            }\n          },\n          [\n            _c(\n              \"el-form\",\n              {\n                ref: \"saveForm\",\n                attrs: {\n                  rules: _vm.ruleValidate,\n                  model: _vm.saveForm,\n                  inline: true,\n                  \"label-width\": \"130px\",\n                  \"lable-position\": _vm.labelPosition\n                }\n              },\n              [\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"商品名称\", prop: \"productName\" } },\n                  [\n                    _c(\"el-input\", {\n                      attrs: {\n                        placeholder: \"请输入商品名称\",\n                        \"suffix-icon\": \"“xxxx”\"\n                      },\n                      model: {\n                        value: _vm.saveForm.productName,\n                        callback: function($$v) {\n                          _vm.$set(_vm.saveForm, \"productName\", $$v)\n                        },\n                        expression: \"saveForm.productName\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"所属分类\", prop: \"typeId\" } },\n                  [\n                    _c(\"el-cascader\", {\n                      attrs: {\n                        props: _vm.props,\n                        placeholder: \"请选择商品类别\"\n                      },\n                      model: {\n                        value: _vm.saveForm.typeId,\n                        callback: function($$v) {\n                          _vm.$set(_vm.saveForm, \"typeId\", $$v)\n                        },\n                        expression: \"saveForm.typeId\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"价格(元)\", prop: \"productPrice\" } },\n                  [\n                    _c(\"el-input\", {\n                      attrs: {\n                        placeholder: \"请输入价格\",\n                        onkeyup:\n                          \"this.value=this.value.replace(/[^\\\\d.]/g,'');\",\n                        \"suffix-icon\": \"“xxxx”\"\n                      },\n                      model: {\n                        value: _vm.saveForm.productPrice,\n                        callback: function($$v) {\n                          _vm.$set(_vm.saveForm, \"productPrice\", $$v)\n                        },\n                        expression: \"saveForm.productPrice\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"总佣金(元)\", prop: \"totalReward\" } },\n                  [\n                    _c(\"el-input\", {\n                      attrs: {\n                        disabled: _vm.totalRewardDisabled,\n                        placeholder: \"请输入佣金\",\n                        \"suffix-icon\": \"“xxxx”\"\n                      },\n                      model: {\n                        value: _vm.saveForm.totalReward,\n                        callback: function($$v) {\n                          _vm.$set(_vm.saveForm, \"totalReward\", $$v)\n                        },\n                        expression: \"saveForm.totalReward\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"任务单价(元)\", prop: \"taskPrice\" } },\n                  [\n                    _c(\"el-input\", {\n                      attrs: {\n                        disabled: _vm.taskPriceDisabled,\n                        placeholder: \"请输入任务金\",\n                        \"suffix-icon\": \"“xxxx”\"\n                      },\n                      model: {\n                        value: _vm.saveForm.taskPrice,\n                        callback: function($$v) {\n                          _vm.$set(_vm.saveForm, \"taskPrice\", $$v)\n                        },\n                        expression: \"saveForm.taskPrice\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"任务份数\", prop: \"taskNumber\" } },\n                  [\n                    _c(\"el-input\", {\n                      attrs: {\n                        disabled: _vm.taskNumberDisabled,\n                        placeholder: \"请输入任务份数\",\n                        \"suffix-icon\": \"“xxxx”\"\n                      },\n                      model: {\n                        value: _vm.saveForm.taskNumber,\n                        callback: function($$v) {\n                          _vm.$set(_vm.saveForm, \"taskNumber\", $$v)\n                        },\n                        expression: \"saveForm.taskNumber\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"状态\", prop: \"productStatus\" } },\n                  [\n                    _c(\n                      \"el-select\",\n                      {\n                        attrs: { placeholder: \"请选择商品状态\" },\n                        model: {\n                          value: _vm.saveForm.productStatus,\n                          callback: function($$v) {\n                            _vm.$set(_vm.saveForm, \"productStatus\", $$v)\n                          },\n                          expression: \"saveForm.productStatus\"\n                        }\n                      },\n                      _vm._l(_vm.productStatusList, function(item) {\n                        return _c(\"el-option\", {\n                          key: item.id,\n                          attrs: { label: item.name, value: item.id }\n                        })\n                      }),\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"产品类型\", prop: \"productType\" } },\n                  [\n                    _c(\n                      \"el-select\",\n                      {\n                        attrs: { placeholder: \"请选择产品类型\" },\n                        model: {\n                          value: _vm.saveForm.productType,\n                          callback: function($$v) {\n                            _vm.$set(_vm.saveForm, \"productType\", $$v)\n                          },\n                          expression: \"saveForm.productType\"\n                        }\n                      },\n                      _vm._l(_vm.productTypeList, function(item) {\n                        return _c(\"el-option\", {\n                          key: item.id,\n                          attrs: { label: item.name, value: item.id }\n                        })\n                      }),\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"商户\", prop: \"shopId\" } },\n                  [\n                    _c(\n                      \"el-select\",\n                      {\n                        attrs: {\n                          placeholder: \"请选择商户\",\n                          disabled: _vm.editShopDisabled\n                        },\n                        model: {\n                          value: _vm.saveForm.shopId,\n                          callback: function($$v) {\n                            _vm.$set(_vm.saveForm, \"shopId\", $$v)\n                          },\n                          expression: \"saveForm.shopId\"\n                        }\n                      },\n                      _vm._l(_vm.shopList, function(item) {\n                        return _c(\"el-option\", {\n                          key: item.id,\n                          attrs: { label: item.shopName, value: item.id }\n                        })\n                      }),\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  {\n                    staticStyle: { width: \"100%\" },\n                    attrs: { label: \"长方形图\", prop: \"homeProductImg\" }\n                  },\n                  [\n                    _c(\n                      \"el-upload\",\n                      {\n                        attrs: {\n                          name: \"file\",\n                          action: \"/admin/upload/file\",\n                          \"list-type\": \"picture-card\",\n                          limit: 1,\n                          \"file-list\": _vm.homeFileLists,\n                          \"on-preview\": _vm.handlePictureCardPreview,\n                          \"on-success\": _vm.homeSuccess,\n                          \"on-remove\": _vm.handleHomeRemove,\n                          \"on-exceed\": _vm.handleExceed\n                        }\n                      },\n                      [_c(\"i\", { staticClass: \"el-icon-plus\" })]\n                    ),\n                    _c(\n                      \"el-dialog\",\n                      {\n                        attrs: {\n                          visible: _vm.imgDialogVisible,\n                          size: \"full\",\n                          modal: false,\n                          title: \"查看大图片\"\n                        },\n                        on: {\n                          \"update:visible\": function($event) {\n                            _vm.imgDialogVisible = $event\n                          }\n                        }\n                      },\n                      [\n                        _c(\"img\", {\n                          attrs: {\n                            width: \"100%\",\n                            src: _vm.dialogImageUrl,\n                            alt: \"\"\n                          }\n                        })\n                      ]\n                    )\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  {\n                    staticStyle: { width: \"100%\" },\n                    attrs: { label: \"主图上传\", prop: \"productImg\" }\n                  },\n                  [\n                    _c(\n                      \"el-upload\",\n                      {\n                        attrs: {\n                          name: \"file\",\n                          action: \"/admin/upload/file\",\n                          \"list-type\": \"picture-card\",\n                          limit: 1,\n                          \"file-list\": _vm.fileLists,\n                          \"on-preview\": _vm.handlePictureCardPreview,\n                          \"on-success\": _vm.success,\n                          \"on-remove\": _vm.handleRemove,\n                          \"on-exceed\": _vm.handleExceed\n                        }\n                      },\n                      [_c(\"i\", { staticClass: \"el-icon-plus\" })]\n                    ),\n                    _c(\n                      \"el-dialog\",\n                      {\n                        attrs: {\n                          visible: _vm.imgDialogVisible,\n                          size: \"full\",\n                          modal: false,\n                          title: \"查看大图片\"\n                        },\n                        on: {\n                          \"update:visible\": function($event) {\n                            _vm.imgDialogVisible = $event\n                          }\n                        }\n                      },\n                      [\n                        _c(\"img\", {\n                          attrs: {\n                            width: \"100%\",\n                            src: _vm.dialogImageUrl,\n                            alt: \"\"\n                          }\n                        })\n                      ]\n                    )\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  {\n                    staticStyle: { width: \"100%\" },\n                    attrs: { label: \"缩略图上传\", prop: \"detailProductImg\" }\n                  },\n                  [\n                    _c(\n                      \"el-upload\",\n                      {\n                        attrs: {\n                          name: \"file\",\n                          action: \"/admin/upload/file\",\n                          \"list-type\": \"picture-card\",\n                          \"file-list\": _vm.detailFileLists,\n                          \"on-preview\": _vm.handlePictureCardPreview,\n                          \"on-success\": _vm.detailSuccess,\n                          \"on-remove\": _vm.handleDetailRemove\n                        }\n                      },\n                      [_c(\"i\", { staticClass: \"el-icon-plus\" })]\n                    ),\n                    _c(\n                      \"el-dialog\",\n                      {\n                        attrs: {\n                          visible: _vm.imgDialogVisible,\n                          size: \"full\",\n                          modal: false,\n                          title: \"查看大图片\"\n                        },\n                        on: {\n                          \"update:visible\": function($event) {\n                            _vm.imgDialogVisible = $event\n                          }\n                        }\n                      },\n                      [\n                        _c(\"img\", {\n                          attrs: {\n                            width: \"100%\",\n                            src: _vm.dialogImageUrl,\n                            alt: \"\"\n                          }\n                        })\n                      ]\n                    )\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"商品详情\", prop: \"productDes\" } },\n                  [\n                    _c(\"quill-editor\", {\n                      staticStyle: { height: \"500px\", width: \"600px\" },\n                      attrs: { options: _vm.quillOption },\n                      model: {\n                        value: _vm.saveForm.productDetail,\n                        callback: function($$v) {\n                          _vm.$set(_vm.saveForm, \"productDetail\", $$v)\n                        },\n                        expression: \"saveForm.productDetail\"\n                      }\n                    })\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\n              \"div\",\n              {\n                staticClass: \"dialog-footer\",\n                attrs: { slot: \"footer\" },\n                slot: \"footer\"\n              },\n              [\n                _c(\n                  \"el-button\",\n                  {\n                    attrs: { type: \"primary\", loading: _vm.saveLoading },\n                    on: {\n                      click: function($event) {\n                        return _vm.saveProduct()\n                      }\n                    }\n                  },\n                  [_vm._v(\"确定\")]\n                ),\n                _c(\n                  \"el-button\",\n                  {\n                    on: {\n                      click: function($event) {\n                        _vm.editVisible = false\n                      }\n                    }\n                  },\n                  [_vm._v(\"取消\")]\n                )\n              ],\n              1\n            )\n          ],\n          1\n        ),\n        _c(\n          \"el-drawer\",\n          {\n            attrs: {\n              visible: _vm.productSpecDrawer,\n              direction: \"rtl\",\n              size: \"70%\",\n              \"destroy-on-close\": true,\n              withHeader: false,\n              \"before-close\": _vm.handleDrawerClose\n            },\n            on: {\n              \"update:visible\": function($event) {\n                _vm.productSpecDrawer = $event\n              }\n            }\n          },\n          [\n            _c(\n              \"div\",\n              { staticStyle: { \"margin-left\": \"10px\", \"margin-top\": \"10px\" } },\n              [\n                _c(\n                  \"div\",\n                  { staticClass: \"handle-box\" },\n                  [\n                    _c(\n                      \"el-button\",\n                      {\n                        attrs: {\n                          type: \"primary\",\n                          round: \"\",\n                          icon: \"el-icon-circle-plus-outline\"\n                        },\n                        on: {\n                          click: function($event) {\n                            return _vm.handleProductSpecAdd()\n                          }\n                        }\n                      },\n                      [_vm._v(\"添加\")]\n                    )\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-table\",\n                  {\n                    directives: [\n                      {\n                        name: \"loading\",\n                        rawName: \"v-loading\",\n                        value: _vm.innerTableDataLoading,\n                        expression: \"innerTableDataLoading\"\n                      }\n                    ],\n                    attrs: {\n                      data: _vm.productSpecList,\n                      \"header-cell-style\": _vm.tableHeaderColor\n                    }\n                  },\n                  [\n                    _c(\"el-table-column\", {\n                      attrs: {\n                        label: \"序号\",\n                        type: \"index\",\n                        width: \"50\",\n                        align: \"center\"\n                      }\n                    }),\n                    _c(\"el-table-column\", {\n                      attrs: {\n                        prop: \"productSpecValueType\",\n                        label: \"规格值类型\",\n                        align: \"center\",\n                        \"show-overflow-tooltip\": true,\n                        width: \"110px\"\n                      }\n                    }),\n                    _c(\"el-table-column\", {\n                      attrs: {\n                        prop: \"productSpecValueName\",\n                        label: \"规格值名称\",\n                        align: \"center\",\n                        \"show-overflow-tooltip\": true\n                      }\n                    }),\n                    _c(\"el-table-column\", {\n                      attrs: {\n                        label: \"商品数量\",\n                        prop: \"productNumber\",\n                        align: \"center\"\n                      }\n                    }),\n                    _c(\"el-table-column\", {\n                      attrs: {\n                        label: \"商品库存\",\n                        prop: \"stockNumber\",\n                        align: \"center\"\n                      }\n                    }),\n                    _c(\"el-table-column\", {\n                      attrs: { label: \"商品价格\", align: \"center\" },\n                      scopedSlots: _vm._u([\n                        {\n                          key: \"default\",\n                          fn: function(scope) {\n                            return [\n                              _vm._v(\"￥\" + _vm._s(scope.row.productPrice))\n                            ]\n                          }\n                        }\n                      ])\n                    }),\n                    _c(\"el-table-column\", {\n                      attrs: { label: \"划线价格\", align: \"center\" },\n                      scopedSlots: _vm._u([\n                        {\n                          key: \"default\",\n                          fn: function(scope) {\n                            return [\n                              _vm._v(\"￥\" + _vm._s(scope.row.scribingPrice))\n                            ]\n                          }\n                        }\n                      ])\n                    }),\n                    _c(\"el-table-column\", {\n                      attrs: { label: \"成本价格\", align: \"center\" },\n                      scopedSlots: _vm._u([\n                        {\n                          key: \"default\",\n                          fn: function(scope) {\n                            return [_vm._v(\"￥\" + _vm._s(scope.row.costPrice))]\n                          }\n                        }\n                      ])\n                    }),\n                    _c(\"el-table-column\", {\n                      attrs: {\n                        prop: \"createTime\",\n                        label: \"创建时间\",\n                        formatter: _vm.dateFormat,\n                        align: \"center\"\n                      }\n                    }),\n                    _c(\"el-table-column\", {\n                      attrs: { label: \"操作\", align: \"center\" },\n                      scopedSlots: _vm._u([\n                        {\n                          key: \"default\",\n                          fn: function(scope) {\n                            return [\n                              _c(\"el-button\", {\n                                attrs: {\n                                  type: \"primary\",\n                                  icon: \"el-icon-edit\",\n                                  circle: \"\"\n                                },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.handleProductSpecEdit(\n                                      scope.$index,\n                                      scope.row\n                                    )\n                                  }\n                                }\n                              })\n                            ]\n                          }\n                        }\n                      ])\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-drawer\",\n                  {\n                    attrs: {\n                      size: \"60%\",\n                      \"append-to-body\": true,\n                      \"before-close\": _vm.handleInnerDrawerClose,\n                      visible: _vm.innerDrawer,\n                      \"show-close\": false,\n                      withHeader: false\n                    },\n                    on: {\n                      \"update:visible\": function($event) {\n                        _vm.innerDrawer = $event\n                      }\n                    }\n                  },\n                  [\n                    _c(\"div\", { staticStyle: { \"text-align\": \"center\" } }, [\n                      _c(\"span\", { staticClass: \"inner-drawer-tittle\" }, [\n                        _vm._v(_vm._s(_vm.innerDrawerTittle))\n                      ])\n                    ]),\n                    _c(\n                      \"el-form\",\n                      {\n                        ref: \"saveProductSpecForm\",\n                        attrs: {\n                          rules: _vm.specRuleValidate,\n                          model: _vm.saveProductSpecForm,\n                          inline: true,\n                          \"lable-position\": _vm.labelPosition,\n                          \"label-width\": \"120px\"\n                        }\n                      },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { staticStyle: { \"margin-left\": \"80px\" } },\n                          [\n                            [\n                              _c(\"el-transfer\", {\n                                attrs: {\n                                  data: _vm.productSpecValueList,\n                                  \"target-order\": \"push\",\n                                  titles: _vm.transferTittle\n                                },\n                                model: {\n                                  value: _vm.selectProductSpecValueList,\n                                  callback: function($$v) {\n                                    _vm.selectProductSpecValueList = $$v\n                                  },\n                                  expression: \"selectProductSpecValueList\"\n                                }\n                              })\n                            ]\n                          ],\n                          2\n                        ),\n                        _c(\n                          \"el-form-item\",\n                          {\n                            attrs: { label: \"商品数量\", prop: \"productNumber\" }\n                          },\n                          [\n                            _c(\"el-input\", {\n                              attrs: { placeholder: \"请输入商品数量\" },\n                              model: {\n                                value: _vm.saveProductSpecForm.productNumber,\n                                callback: function($$v) {\n                                  _vm.$set(\n                                    _vm.saveProductSpecForm,\n                                    \"productNumber\",\n                                    $$v\n                                  )\n                                },\n                                expression: \"saveProductSpecForm.productNumber\"\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        _c(\n                          \"el-form-item\",\n                          {\n                            attrs: { label: \"商品价格\", prop: \"productPrice\" }\n                          },\n                          [\n                            _c(\"el-input\", {\n                              attrs: { placeholder: \"请输入商品价格\" },\n                              model: {\n                                value: _vm.saveProductSpecForm.productPrice,\n                                callback: function($$v) {\n                                  _vm.$set(\n                                    _vm.saveProductSpecForm,\n                                    \"productPrice\",\n                                    $$v\n                                  )\n                                },\n                                expression: \"saveProductSpecForm.productPrice\"\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        _c(\n                          \"el-form-item\",\n                          {\n                            attrs: { label: \"划线价格\", prop: \"scribingPrice\" }\n                          },\n                          [\n                            _c(\"el-input\", {\n                              attrs: { placeholder: \"请输入划线价格\" },\n                              model: {\n                                value: _vm.saveProductSpecForm.scribingPrice,\n                                callback: function($$v) {\n                                  _vm.$set(\n                                    _vm.saveProductSpecForm,\n                                    \"scribingPrice\",\n                                    $$v\n                                  )\n                                },\n                                expression: \"saveProductSpecForm.scribingPrice\"\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"成本价格\", prop: \"costPrice\" } },\n                          [\n                            _c(\"el-input\", {\n                              attrs: { placeholder: \"请输入成本价格\" },\n                              model: {\n                                value: _vm.saveProductSpecForm.costPrice,\n                                callback: function($$v) {\n                                  _vm.$set(\n                                    _vm.saveProductSpecForm,\n                                    \"costPrice\",\n                                    $$v\n                                  )\n                                },\n                                expression: \"saveProductSpecForm.costPrice\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"div\",\n                      {\n                        staticClass: \"demo-drawer__footer\",\n                        staticStyle: { \"text-align\": \"center\" }\n                      },\n                      [\n                        _c(\n                          \"el-button\",\n                          {\n                            attrs: {\n                              type: \"primary\",\n                              loading: _vm.saveSpecLoading\n                            },\n                            on: {\n                              click: function($event) {\n                                return _vm.saveProductSpec()\n                              }\n                            }\n                          },\n                          [_vm._v(\"确 定\")]\n                        ),\n                        _c(\n                          \"el-button\",\n                          {\n                            on: {\n                              click: function($event) {\n                                return _vm.innerDrawerClose()\n                              }\n                            }\n                          },\n                          [_vm._v(\"取 消\")]\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ]\n        )\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}