{"remainingRequest":"D:\\Work\\jianpanHt\\jpqt\\node_modules\\babel-loader\\lib\\index.js!D:\\Work\\jianpanHt\\jpqt\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Work\\jianpanHt\\jpqt\\src\\store\\index.js","dependencies":[{"path":"D:\\Work\\jianpanHt\\jpqt\\src\\store\\index.js","mtime":1591608113420},{"path":"D:\\Work\\jianpanHt\\jpqt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Work\\jianpanHt\\jpqt\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Work\\jianpanHt\\jpqt\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    user: {\n      name: window.localStorage.getItem('user' || '[]') == null ? '未登录' : JSON.parse(window.localStorage.getItem('user' || '[]')).name,\n      userface: window.localStorage.getItem('user' || '[]') == null ? '' : JSON.parse(window.localStorage.getItem('user' || '[]')).userface,\n      username: window.localStorage.getItem('user' || '[]') == null ? '' : JSON.parse(window.localStorage.getItem('user' || '[]')).username,\n      roles: window.localStorage.getItem('user' || '[]') == null ? '未登录' : JSON.parse(window.localStorage.getItem('user' || '[]')).roles\n    },\n    routes: [],\n    nfDot: false\n  },\n  mutations: {\n    login: function login(state, user) {\n      state.user = user;\n      window.localStorage.setItem('user', JSON.stringify(user));\n    },\n    initMenu: function initMenu(state, menus) {\n      state.routes = menus;\n    },\n    logout: function logout(state) {\n      window.localStorage.removeItem('user');\n      /**\r\n       * state.routes 作用：\r\n       *     它主要用于记录当前用户所能访问的菜单资源。\r\n       *     在 “全局路由导航卫士” 中将通过对该对象的判断：\r\n       *     若为空，则可以判定某个请求是按F5刷新或直接在地址栏输入地址访问的，需要请求当前用户所能访问的菜单资源；\r\n       *     若不为空，则表明是正常跳转的，不需要重新请求菜单资源。\r\n       *     当我们注销登录时，需要该对象置空，表明所有的请求都需要重新请求菜单资源！\r\n       */\n\n      state.routes = [];\n    }\n  },\n  actions: {}\n});",{"version":3,"sources":["D:\\Work\\jianpanHt\\jpqt\\src\\store\\index.js"],"names":["Vue","Vuex","use","Store","state","user","name","window","localStorage","getItem","JSON","parse","userface","username","roles","routes","nfDot","mutations","login","setItem","stringify","initMenu","menus","logout","removeItem","actions"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACE,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAAU,IAAtC,KAA+C,IAA/C,GAAsD,KAAtD,GAA8DC,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAAU,IAAtC,CAAX,EAAwDH,IADxH;AAEJM,MAAAA,QAAQ,EAAEL,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAAU,IAAtC,KAA+C,IAA/C,GAAsD,EAAtD,GAA2DC,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAAU,IAAtC,CAAX,EAAwDG,QAFzH;AAGJC,MAAAA,QAAQ,EAAEN,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAAU,IAAtC,KAA+C,IAA/C,GAAsD,EAAtD,GAA2DC,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAAU,IAAtC,CAAX,EAAwDI,QAHzH;AAIJC,MAAAA,KAAK,EAAEP,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAAU,IAAtC,KAA+C,IAA/C,GAAsD,KAAtD,GAA8DC,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAAU,IAAtC,CAAX,EAAwDK;AAJzH,KADD;AAOLC,IAAAA,MAAM,EAAE,EAPH;AAQLC,IAAAA,KAAK,EAAE;AARF,GADqB;AAW5BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KADS,iBACHd,KADG,EACIC,IADJ,EACU;AACjBD,MAAAA,KAAK,CAACC,IAAN,GAAaA,IAAb;AACAE,MAAAA,MAAM,CAACC,YAAP,CAAoBW,OAApB,CAA4B,MAA5B,EAAoCT,IAAI,CAACU,SAAL,CAAef,IAAf,CAApC;AACD,KAJQ;AAKTgB,IAAAA,QALS,oBAKAjB,KALA,EAKOkB,KALP,EAKc;AACrBlB,MAAAA,KAAK,CAACW,MAAN,GAAeO,KAAf;AACD,KAPQ;AAQTC,IAAAA,MARS,kBAQFnB,KARE,EAQK;AACZG,MAAAA,MAAM,CAACC,YAAP,CAAoBgB,UAApB,CAA+B,MAA/B;AACA;;;;;;;;;AAQApB,MAAAA,KAAK,CAACW,MAAN,GAAe,EAAf;AACD;AAnBQ,GAXiB;AAgC5BU,EAAAA,OAAO,EAAE;AAhCmB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    user: {\r\n      name: window.localStorage.getItem('user' || '[]') == null ? '未登录' : JSON.parse(window.localStorage.getItem('user' || '[]')).name,\r\n      userface: window.localStorage.getItem('user' || '[]') == null ? '' : JSON.parse(window.localStorage.getItem('user' || '[]')).userface,\r\n      username: window.localStorage.getItem('user' || '[]') == null ? '' : JSON.parse(window.localStorage.getItem('user' || '[]')).username,\r\n      roles: window.localStorage.getItem('user' || '[]') == null ? '未登录' : JSON.parse(window.localStorage.getItem('user' || '[]')).roles\r\n    },\r\n    routes: [],\r\n    nfDot: false\r\n  },\r\n  mutations: {\r\n    login(state, user) {\r\n      state.user = user\r\n      window.localStorage.setItem('user', JSON.stringify(user))\r\n    },\r\n    initMenu(state, menus) {\r\n      state.routes = menus\r\n    },\r\n    logout(state) {\r\n      window.localStorage.removeItem('user')\r\n      /**\r\n       * state.routes 作用：\r\n       *     它主要用于记录当前用户所能访问的菜单资源。\r\n       *     在 “全局路由导航卫士” 中将通过对该对象的判断：\r\n       *     若为空，则可以判定某个请求是按F5刷新或直接在地址栏输入地址访问的，需要请求当前用户所能访问的菜单资源；\r\n       *     若不为空，则表明是正常跳转的，不需要重新请求菜单资源。\r\n       *     当我们注销登录时，需要该对象置空，表明所有的请求都需要重新请求菜单资源！\r\n       */\r\n      state.routes = []\r\n    }\r\n  },\r\n  actions: {\r\n\r\n  }\r\n})\r\n"]}]}